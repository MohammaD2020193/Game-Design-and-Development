using UnityEngine;
using UnityEngine.AI;

public class Attack : StateMachineBehaviour
{
    Transform Player;
    // OnStateEnter is called when a transition starts and the state machine starts to evaluate this state
    override public void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        Player = GameObject.FindGameObjectWithTag(TagManager.PLAYER).transform;
        animator.GetComponent<NavMeshAgent>().baseOffset = 1.2f;
    }

    // OnStateUpdate is called on each Update frame between OnStateEnter and OnStateExit callbacks
    override public void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        animator.transform.LookAt(Player);
        float distance = Vector3.Distance(Player.position, animator.transform.position);
        Collider[] nearbyObjects = Physics.OverlapSphere(animator.transform.position, 3f);
        foreach(Collider i in nearbyObjects)
        {
            if (i.transform.tag == TagManager.PLAYER)
            {
                FindObjectOfType<PlayerHealth>().Damage();
            }
        }
        if (distance > 4.5f)
        {
            animator.SetBool("Attack", false);
        }


    }

    // OnStateExit is called when a transition ends and the state machine finishes evaluating this state
    override public void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
   {
        animator.GetComponent<NavMeshAgent>().baseOffset = 0f;

    }

    // OnStateMove is called right after Animator.OnAnimatorMove()
    override public void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
    {
        // Implement code that processes and affects root motion
    }

    // OnStateIK is called right after Animator.OnAnimatorIK()
    override public void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
      {
       // Implement code that sets up animation IK (inverse kinematics)
      }
}
